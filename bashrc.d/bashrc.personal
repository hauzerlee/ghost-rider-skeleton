test -f ~/.bashrc.d/bashrc.local.pre && source ~/.bashrc.d/bashrc.local.pre

test -f ~/.bashrc.d/bashrc.vars && source ~/.bashrc.d/bashrc.vars

if  test -x /usr/bin/which; then
    WHICH=/usr/bin/which
elif  test -x /bin/which; then
    WHICH=/bin/which
fi

############################################################
### add these lines into ~/.bashrc && remove leading '#'
### additional personal runtime config -- personal
#test -f ~/.bashrc.personal && source ~/.bashrc.personal
############################################################

if test "${TERM}" != "linux"; then
    parse_git_branch_for_prompt() {
        branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
        if test -z "${branch}"; then
            return
        fi
        echo -e "(${branch}) "
    }
    export PS1="\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\e[01;32m\]\u@\h\[\e[00m\]:\[\e[01;36m\]\w\[\e[00m\]\n\[\e[01;33m\]\$(parse_git_branch_for_prompt)\[\e[00m\]\$ "
fi

shopt -s cdspell
shopt -s no_empty_cmd_completion
shopt -s extglob

export HISTCONTROL=ignoredups:erasedups
export HISTFILESIZE=50000000

export EDITOR=vim
export VISUAL=vim

# 用于执行其他的 bashrc 文件
if test ! -z "${OTHER_BASHRCS}"; then
    for f in ${OTHER_BASHRCS}; do
        test -f ${f} && source ${f}
    done
fi

export GPG_TTY=$(tty)

test -f ~/.bashrc.d/bashrc.local && source ~/.bashrc.d/bashrc.local

# vim: set sts=4 sw=4 et ft=sh:
